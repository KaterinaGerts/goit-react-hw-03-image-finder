{"version":3,"sources":["components/Modal/Modal.module.css","components/Button/Button.module.css","components/Container/Container.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","App.module.css","components/Container/Container.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","services/card-api.js","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","state","cardName","handleChange","e","value","currentTarget","setState","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","error","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","cards","webformatURL","tags","src","alt","width","height","Button","LoadButton","LoadButtonLabel","ImageGallery","onImageClick","map","id","largeImageURL","api","fetchImages","searchImages","page","fetch","then","response","ok","json","hits","Spinner","overlay","color","secondaryColor","timeout","modalRoot","document","querySelector","Modal","onEscapeClick","code","onClose","closeOverlay","target","window","addEventListener","removeEventListener","modalImage","createPortal","Overlay","Status","App","status","isShow","handleFormSubmit","incrementPage","prevState","toggleModal","prevProps","prevCard","nextCard","prevPage","nextPage","cardsApi","length","info","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","div","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e842ba6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1SXCh\",\"modalImage\":\"Modal_modalImage__AC2fQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadButton\":\"Button_LoadButton__1TZMF\",\"LoadButtonLabel\":\"Button_LoadButtonLabel__291y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__jOVNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2laD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3UvKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__2-aj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"App_div__1zTWo\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Container ({ children }) {\r\nreturn <div className={s.container}>{children}</div>;\r\n} \r\n\r\nContainer.propTypes = {    \r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport {  toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    cardName: '',\r\n  }\r\n\r\n  handleChange = e => {  \r\n    const value = e.currentTarget.value;  \r\n    this.setState({ cardName: value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit =e => {\r\n    e.preventDefault();\r\n\r\n    const {cardName} = this.state\r\n\r\n    if(cardName.trim() === '') {\r\n      toast.error(\"Oh no, you didn't write your request!\");\r\n      return;\r\n    }\r\n    this.props.onSubmit({cardName});    \r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({cardName: ''});\r\n  };\r\n\r\n  render() {\r\n    const { cardName } = this.state;\r\n    return (\r\n      <div>\r\n        <header className={s.Searchbar}>\r\n          <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className={s.SearchFormButton}>\r\n              <span className={s.SearchFormButtonLabel}>Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className={s.SearchFormInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={cardName}\r\n              onChange={this.handleChange} \r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = { \r\n  onSubmit: PropTypes.func.isRequired, \r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({\r\n  onClick,\r\n  cards: { webformatURL, tags },\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={onClick}\r\n        className=\"ImageGalleryItem-image\"\r\n        width=\"200\"\r\n        height=\"150\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\nimport s from './Button.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({onClick}) {\r\n  return (\r\n    <div>\r\n      <button className={s.LoadButton} type=\"button\" onClick={onClick}>\r\n        <span className={s.LoadButtonLabel}>Load more</span>\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport Button from 'components/Button';\r\nimport s from './ImageGallery.module.css';\r\n\r\n\r\nfunction ImageGallery({cards, onClick, onImageClick}) {\r\n  \r\n      return (\r\n        <div>\r\n          <ul className={s.ImageGallery}>\r\n            {cards.map(({id, webformatURL, tags, largeImageURL}) => {\r\n              return <ImageGalleryItem key={id} cards={{id, webformatURL, tags}} onClick={() => onImageClick(largeImageURL)}/>;\r\n            })}\r\n          </ul>\r\n          <Button onClick={onClick} />\r\n        </div>    \r\n  )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGallery;\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '22269810-55457156398dac84727ab5964';\r\nconst perPage = '12';\r\n\r\n\r\nfunction fetchImages(searchImages, page) {\r\n  return fetch(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchImages}&page=${page}&per_page=${perPage}&key=${KEY}`)\r\n  .then(response => {   \r\n    if(response.ok) {      \r\n    return response.json();\r\n    }     \r\n  }).then((response) => { \r\n    return response.hits;\r\n  });    \r\n}\r\n\r\nconst api = {\r\n  fetchImages\r\n}\r\n\r\nexport default api;","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nexport default function Spinner() {\r\n  return (  \r\n    <div className={s.overlay}>\r\n    <Loader\r\n        type=\"MutatingDots\"\r\n        color=\"#00BFFF\"\r\n        secondaryColor=\"#8a008a\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n      <div>Loading...</div>\r\n      </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n\r\n  onEscapeClick = (e) => {   \r\n    if(e.code=== 'Escape') {   \r\n      this.props.onClose();\r\n  }\r\n}\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', \r\n    this.onEscapeClick\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', \r\n      this.onEscapeClick\r\n    )\r\n  }\r\n\r\n  closeOverlay = (e) => {\r\n    if(e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const modalImage = this.props.modalImage;\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.closeOverlay} >\r\n        <div className={s.Modal}>\r\n          <img className={s.modalImage} src={modalImage} alt=\"\" width =\"500\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Container from 'components/Container';\r\nimport Searchbar from 'components/Searchbar';\r\nimport ImageGallery from 'components/ImageGallery';\r\nimport cardsApi from './services/card-api';\r\nimport Spinner from 'components/Loader';\r\nimport Modal from 'components/Modal';\r\nimport s from './App.module.css';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    cardName: '',\r\n    cards: [],\r\n    error: false,\r\n    status: Status.IDLE,\r\n    page: 1,\r\n    isShow: false,\r\n    modalImage: '',\r\n  };\r\n\r\n  handleFormSubmit = cardName => {\r\n    this.setState(cardName);\r\n    this.setState({ cards: [] });\r\n    this.setState({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevCard = prevState.cardName;\r\n    const nextCard = this.state.cardName;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevCard !== nextCard || prevPage !== nextPage) {\r\n      this.setState({ status: Status.PENDING });\r\n\r\n      cardsApi\r\n        .fetchImages(nextCard, nextPage)\r\n        .then(cards => {\r\n          if (cards.length === 0) {\r\n            this.setState({ status: Status.IDLE });\r\n            toast.info('Please, try again your request is not defind!')\r\n          } else {\r\n          this.setState(prevState => {\r\n            return {\r\n              cards: [...prevState.cards, ...cards],\r\n              status: Status.RESOLVED,\r\n            };\r\n          })}\r\n        })\r\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n        .finally(() => {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  incrementPage = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        page: prevState.page + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleModal = modalImage => {\r\n    this.setState(({ isShow }) => ({\r\n      isShow: !isShow,\r\n    }));\r\n    this.setState({ modalImage });\r\n  };\r\n\r\n  render() {\r\n    const { cards, error, status, isShow, modalImage } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Searchbar onSubmit={this.handleFormSubmit} />\r\n          {status === Status.IDLE && (\r\n            <div className={s.div}>Please, write a card name!</div>\r\n          )}\r\n          {status === Status.PENDING && <Spinner />}\r\n          {status === Status.REJECTED && <h1>{error.message}</h1>}\r\n          {status === Status.RESOLVED && (\r\n            <ImageGallery\r\n              cards={cards}\r\n              onClick={this.incrementPage}\r\n              onImageClick={this.toggleModal}\r\n            />\r\n          )}\r\n          {isShow && (\r\n            <Modal modalImage={modalImage} onClose={this.toggleModal} />\r\n          )}\r\n          <ToastContainer autoClose={3000} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchFormButton\":\"Searchbar_SearchFormButton__1658a\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2hxqI\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2TYkx\"};"],"sourceRoot":""}